eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"ember-split-view-demo/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"ember-split-view-demo/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=ember-split-view-demo/app.js");

;eval("define(\"ember-split-view-demo/config/environment\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\"modulePrefix\":\"ember-split-view-demo\",\"environment\":\"development\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true}};\n  });//# sourceURL=ember-split-view-demo/config/environment.js");

;eval("define(\"ember-split-view-demo/components/split-child\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n      splitPercentage: Ember.computed.alias(\'parentView.splitPercentage\'),\n      sashWidthPercentage: Ember.computed.alias(\'parentView.sash.widthPercentage\'),\n      isVertical: Ember.computed.alias(\'parentView.isVertical\'),\n      attributeBindings: [\'style\'],\n\n      childSplitView: null,\n      fixedSide: null,\n      movableSide: null,\n\n      didInsertElement: function() {\n        this.get(\'parentView\').addSplit(this);\n        Ember.run.scheduleOnce(\'afterRender\', this, this.updateChildSplitView);\n      },\n\n      willDestroyElement: function() {\n        this.get(\'parentView\').removeSplit(this);    \n      },\n\n      style: function() {\n        var s = \"position: absolute;\";\n\n        if(this.get(\'isVertical\')) {\n          s += \"height:100%;\";\n        } else {\n          s += \"width:100%;\";\n        }\n\n        if(this.get(\'fixedSide\')) {\n          s += this.get(\'fixedSide\') + \":0px;\"\n        }\n\n        if(this.get(\'movableSide\')) {\n          s += this.get(\'movableSide\') + \":\" + this.get(\'movablePercent\') + \"%\";\n        }\n\n        return s;\n      }.property(\'isVertical\', \'fixedSide\', \'movableSide\', \'movablePercent\'),\n\n      movablePercent: function() {\n        if(!this.get(\'movableSide\')) {\n          return;\n        }\n\n        if(this.get(\'movableSide\') === \"left\" || this.get(\'movableSide\') === \"top\") {\n          return this.get(\'splitPercentage\') + this.get(\'sashWidthPercentage\') / 2;\n        } else {\n          return 100 - this.get(\'splitPercentage\') + this.get(\'sashWidthPercentage\') / 2;\n        }\n      }.property(\'sashWidthPercentage\', \'splitPercentage\', \'movableSide\'),\n\n      updateChildSplitView: function() {\n        var childSplit = this.get(\'childSplitView\');\n\n        if(childSplit) {\n          childSplit.set(\'width\', this.$().width());\n          childSplit.set(\'height\', this.$().height());\n        }\n      }.observes(\'childSplitView\', \'movablePercent\')\n    });\n  });//# sourceURL=ember-split-view-demo/components/split-child.js");

;eval("define(\"ember-split-view-demo/components/split-sash\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    /**\n     * This view represents the divider between two views enclosed in a SplitView.\n     * The sash can be dragged to change the size of one vew relative to the other \n     * on either side of the sash.  The sash can be either horizontal or vertical.\n     * The parentView of the sash must be a SplitView\n     *\n     * @cLass SplitSashComponent\n     * @extends Ember.View\n     */\n    __exports__[\"default\"] = Ember.Component.extend({\n      width: 6,\n      widthPercentage: null,\n      isVertical: Ember.computed.alias(\'parentView.isVertical\'),\n      isDragging: Ember.computed.alias(\'parentView.isDragging\'),\n      splitPercentage: Ember.computed.alias(\'parentView.splitPercentage\'),  \n      attributeBindings: [\'style\'],\n\n      /**\n       * @property {string} sashBackgroundColor - the color of the sash when dragging\n       * @default black\n       */\n      sashBackgroundColor: \"black\",\n\n        /**\n       * @property {number} sashOpacity - the background opacity of the sash when dragging\n       * @default 0.1\n       */\n      opacity: 0.1,\n\n      didInsertElement: function() {\n        this.set(\'parentView.sash\', this);\n        this.updateWidthPercentage();\n      },\n\n      style: function() {\n        var s = \"z-index:9999; position:absolute; opacity:\" + this.get(\'opacity\') + \";\";\n\n        if(this.get(\'isVertical\')) {\n          s += \"left:\" + (this.get(\'splitPercentage\') - this.get(\'widthPercentage\') / 2);\n        } else {\n          s += \"top:\" + (this.get(\'splitPercentage\') - this.get(\'widthPercentage\') / 2);\n        }\n\n        s += \"%; \";\n\n        if(this.get(\'isVertical\')) {\n          s += \"width:\" + this.get(\'width\') + \"px; height:100%; cursor:ew-resize;\";\n        } else {\n          s += \"width:100%;\" + \"height:\" + this.get(\'width\') + \"px; cursor:ns-resize;\";\n        }\n\n        if(this.get(\'isDragging\')) {\n          s += \"background-color:\" + this.get(\'sashBackgroundColor\') + \";\";\n        } else {\n          s += \"background-color:transparent;\";\n        }\n\n        return s;\n       }.property(\'opacity\', \'splitPercentage\', \'widthPercentage\', \'isVertical\', \'width\', \'isDragging\'),\n\n      updateWidthPercentage: function() {\n        if(this.get(\'isVertical\')) {\n          this.set(\'widthPercentage\', this.get(\'width\') / this.get(\'parentView.width\') * 100);\n        } else {\n          this.set(\'widthPercentage\', this.get(\'width\') / this.get(\'parentView.height\') * 100);     \n        }\n      }.observes(\'isVertical\', \'width\', \'parentView.width\', \'parentView.height\'),\n\n      mouseDown: function(event) {\n        this.set(\'isDragging\', true);\n        event.preventDefault();\n      }\n    });\n  });//# sourceURL=ember-split-view-demo/components/split-sash.js");

;eval("define(\"ember-split-view-demo/components/split-view\", \n  [\"ember\",\"ember-split-view-demo/components/split-child\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SplitChild = __dependency2__[\"default\"];\n\n    /**\n     * This class represents a view that is split either vertically or horizontally.\n     * The split view is composed of three child views: a left or top view, a sash\n     * view, and a right or bottom view.  The sash may be dragged to change the\n     * relative width or height of the child views.\n     *\n     * Vertical SplitView example:\n     *\n     * ```handlebars\n     * {{#split-view isVertical=true}}\n     *   {{#split-child}}\n     *     Content of the left view here.\n     *   {{/split-child}}\n     *   {{split-sash\"}}\n     *   {{#split-child}}\n     *     Content of the right view here.\n     *   {{/split-child}}\n     * {{/split-view}}\n     * ```\n     *\n     * Horizontal SplitView example:\n     *\n     * ```handlebars\n     * {{#split-view isVertical=false}}\n     *   {{#split-child}}\n     *     Content of the top view here.\n     *   {{/split-child}}\n     *   {{split-sash\"}}\n     *   {{#split-child}}\n     *     Content of the bottom view here.\n     *   {{/split-child}}\n     * {{/split-view}}\n     * ```\n     * \n     * @cLass SplitViewComponent\n     * @extends Ember.Component\n     */\n    __exports__[\"default\"] = Ember.Component.extend({\n      /**\n       * @property {boolean} isVertical - the orientation of the split: true = vertical, false = horizontal\n       * @default true\n       */\n      isVertical: true,\n        \n      /**\n       * @property {Number} splitPercentage - the percentage of the split between 0 and 100\n       * @default 50\n       */\n      splitPercentage: 50,\n\n      splits: null,\n      isDragging: false,\n      attributeBindings: [\'style\'],\n\n      init: function() {\n        this._super();\n        this.set(\'splits\', Ember.A());\n      },\n\n      didInsertElement: function() {\n        this.set(\'parentView.childSplitView\', this);\n        var parentView = this.get(\'parentView\');\n\n        if(!(parentView instanceof SplitChild)) {\n          this.set(\'width\', this.$().width());\n          this.set(\'height\', this.$().height());      \n        }\n      },\n\n      addSplit: function(split) {\n        this.get(\'splits\').addObject(split);\n\n        if(this.get(\'splits\').length === 2) {\n          this.updateOrientation();\n        }\n      },\n\n      removeSplit: function(split) {\n        this.get(\'splits\').removeObject(split);\n      },\n\n      style: function() {\n        var s = \"\";\n\n        if(this.get(\'width\')){\n          s += \"width:\" + this.get(\'width\') + \"px; \";\n        }\n\n        if(this.get(\'height\')){\n          s += \"height:\" + this.get(\'height\') + \"px; \";\n        }\n\n        return s;\n      }.property(\'width\', \'height\'),\n\n      updateOrientation: function() {\n        var leftOrTop = this.get(\'splits\').objectAt(0);\n        var rightOrBottom = this.get(\'splits\').objectAt(1);\n\n        if(this.get(\'isVertical\')) {\n          leftOrTop.set(\'fixedSide\', \'left\');\n          leftOrTop.set(\'movableSide\', \'right\');\n          rightOrBottom.set(\'fixedSide\', \'right\');\n          rightOrBottom.set(\'movableSide\', \'left\');\n        } else {\n          leftOrTop.set(\'fixedSide\', \'top\');\n          leftOrTop.set(\'movableSide\', \'bottom\');\n          rightOrBottom.set(\'fixedSide\', \'bottom\');\n          rightOrBottom.set(\'movableSide\', \'top\');\n        }\n      }.observes(\'isVertical\'),\n\n      constrainSplit: function() {\n        var leftOrTop = this.get(\'splits\').objectAt(0);\n        var rightOrBottom = this.get(\'splits\').objectAt(1);\n\n        if(leftOrTop) {\n          var minLeftOrTopPercentage = this.minChildPercentage(leftOrTop);\n\n          if(this.get(\'splitPercentage\') < minLeftOrTopPercentage) {\n            this.set(\'splitPercentage\', minLeftOrTopPercentage);\n          }\n        }\n        \n        if (rightOrBottom) {\n          var minRightOrBottomPercentage = 100 - this.minChildPercentage(rightOrBottom);\n\n          if(this.get(\'splitPercentage\') > minRightOrBottomPercentage) {\n            this.set(\'splitPercentage\', minRightOrBottomPercentage);\n          }\n        } \n      }.observes(\'sash.widthPercentage\', \'width\', \'height\'),\n\n      mouseUp: function() {\n        this.set(\'isDragging\', false);\n      },\n\n      mouseMove: function(event) {\n        if(!this.get(\'isDragging\')) {\n          return;\n        }\n\n        var posInParent;\n        var percentage;\n\n        if(this.get(\'isVertical\')) {\n          posInParent = event.pageX - this.$().offset().left;\n          percentage = posInParent / this.$().width() * 100;\n        } else {\n          posInParent = event.pageY - this.$().offset().top;\n          percentage = posInParent / this.$().height() * 100;\n        }\n\n        this.set(\'splitPercentage\', percentage);\n        this.constrainSplit();\n      },\n\n      minChildPercentage: function(view) {\n        if(this.get(\'isVertical\')) {\n          return parseInt(view.$().css(\"min-width\")) / this.get(\'width\') * 100 + this.get(\'sash.widthPercentage\') / 2;\n        } else {\n          return parseInt(view.$().css(\"min-height\")) / this.get(\'height\') * 100 + this.get(\'sash.widthPercentage\') / 2;\n        }\n      }\n    });\n  });//# sourceURL=ember-split-view-demo/components/split-view.js");

;eval("define(\"ember-split-view-demo/config/environments/development\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\"modulePrefix\":\"ember-split-view-demo\",\"environment\":\"development\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true}};\n  });//# sourceURL=ember-split-view-demo/config/environments/development.js");

;eval("define(\"ember-split-view-demo/config/environments/test\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\"modulePrefix\":\"ember-split-view-demo\",\"environment\":\"test\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"LOG_ACTIVE_GENERATION\":false,\"LOG_VIEW_LOOKUPS\":false,\"rootElement\":\"#ember-testing\"}};\n  });//# sourceURL=ember-split-view-demo/config/environments/test.js");

;eval("define(\"ember-split-view-demo/controllers/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n      tabsMeta: [\n        Ember.Object.create({ title: \"Vertical\", linkTo: \'vertical\'}),\n        Ember.Object.create({ title: \"Horizontal\", linkTo: \'horizontal\'}),\n        Ember.Object.create({ title: \"Vertical Composite\", linkTo: \'verticalComposite\'}),\n        Ember.Object.create({ title: \"Horizontal Composite\", linkTo: \'horizontalComposite\'}),\n        Ember.Object.create({ title: \"Composite\", linkTo: \'composite\'}),\n      ]\n    });\n  });//# sourceURL=ember-split-view-demo/controllers/application.js");

;eval("define(\"ember-split-view-demo/router\", \n  [\"ember\",\"ember-split-view-demo/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n      this.resource(\'vertical\');\n      this.route(\'horizontal\');\n      this.route(\'verticalComposite\');\n      this.route(\'horizontalComposite\');\n      this.route(\'composite\');\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=ember-split-view-demo/router.js");

;eval("define(\"ember-split-view-demo/routes/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      beforeModel: function() {\n        this.transitionTo(\'vertical\');\n      }\n    });\n  });//# sourceURL=ember-split-view-demo/routes/index.js");

;eval("define(\"ember-split-view-demo/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h2 id=\'title\'>Ember SplitView Demo</h2>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-tabs\'] || (depth0 && depth0[\'bs-tabs\']),options={hash:{\n        \'contentBinding\': (\"tabsMeta\")\n      },hashTypes:{\'contentBinding\': \"STRING\"},hashContexts:{\'contentBinding\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-tabs\", options))));\n      data.buffer.push(\"\\n\\n<div class=\\\"intro\\\">\\n  Drag the sash between the views (boxes).\\n</div>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ember-split-view-demo/templates/application.js");

;eval("define(\"ember-split-view-demo/templates/composite\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"child vertical\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options))));\n      data.buffer.push(\"\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-sash\'] || (depth0 && depth0[\'split-sash\']),options={hash:{\n        \'class\': (\"sash\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-sash\", options))));\n      data.buffer.push(\"\\n  \");\n      stack1 = (helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"compositeRight\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'split-view\'] || (depth0 && depth0[\'split-view\']),options={hash:{\n        \'isVertical\': (false)\n      },hashTypes:{\'isVertical\': \"BOOLEAN\"},hashContexts:{\'isVertical\': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-view\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  \");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n      \");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"child horizontal\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options))));\n      data.buffer.push(\"\\n      \");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-sash\'] || (depth0 && depth0[\'split-sash\']),options={hash:{\n        \'class\': (\"sash\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-sash\", options))));\n      data.buffer.push(\"\\n      \");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"child horizontal\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options))));\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n\n      stack1 = (helper = helpers[\'split-view\'] || (depth0 && depth0[\'split-view\']),options={hash:{\n        \'isVertical\': (true),\n        \'splitPercentage\': (30),\n        \'class\': (\"splitViewVertical\")\n      },hashTypes:{\'isVertical\': \"BOOLEAN\",\'splitPercentage\': \"INTEGER\",\'class\': \"STRING\"},hashContexts:{\'isVertical\': depth0,\'splitPercentage\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-view\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ember-split-view-demo/templates/composite.js");

;eval("define(\"ember-split-view-demo/templates/constitution\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<h4>Amendment I</h4>\\n<p>\\n  Congress shall make no law respecting an establishment of religion, or prohibiting the free exercise thereof; or abridging the freedom of speech, or of the press; or the right of the people peaceably to assemble, and to petition the Government for a redress of grievances.\\n</p>\\n<h4>Amendment II</h4>\\n<p>\\n  A well regulated Militia, being necessary to the security of a free State, <b>the right of the people to keep and bear Arms, shall not be infringed</b>.\\n</p>\\n<h4>Amendment III</h4>\\n<p>\\n  No Soldier shall, in time of peace be quartered in any house, without the consent of the Owner, nor in time of war, but in a manner to be prescribed by law.\\n</p>\\n<h4>Amendment IV</h4>\\n<p>\\n  The right of the people to be secure in their persons, houses, papers, and effects, against unreasonable searches and seizures, shall not be violated, and no Warrants shall issue, but upon probable cause, supported by Oath or affirmation, and particularly describing the place to be searched, and the persons or things to be seized.\\n</p>\\n<h4>Amendment V</h4>\\n<p>\\n  No person shall be held to answer for a capital, or otherwise infamous crime, unless on a presentment or indictment of a Grand Jury, except in cases arising in the land or naval forces, or in the Militia, when in actual service in time of War or public danger; nor shall any person be subject for the same offence to be twice put in jeopardy of life or limb; nor shall be compelled in any criminal case to be a witness against himself, nor be deprived of life, liberty, or property, without due process of law; nor shall private property be taken for public use, without just compensation.\\n</p>\\n<h4>Amendment VI</h4>\\n<p>\\n  In all criminal prosecutions, the accused shall enjoy the right to a speedy and public trial, by an impartial jury of the State and district wherein the crime shall have been committed, which district shall have been previously ascertained by law, and to be informed of the nature and cause of the accusation; to be confronted with the witnesses against him; to have compulsory process for obtaining witnesses in his favor, and to have the Assistance of Counsel for his defence.\\n</p>\\n<h4>Amendment VII</h4>\\n<p>\\n  In Suits at common law, where the value in controversy shall exceed twenty dollars, the right of trial by jury shall be preserved, and no fact tried by a jury, shall be otherwise re-examined in any Court of the United States, than according to the rules of the common law.\\n</p>\\n<h4>Amendment VIII</h4>\\n<p>\\n  Excessive bail shall not be required, nor excessive fines imposed, nor cruel and unusual punishments inflicted.\\n</p>\\n<h4>Amendment IX</h4>\\n<p>\\n  The enumeration in the Constitution, of certain rights, shall not be construed to deny or disparage others retained by the people.\\n</p>\\n<h4>Amendment X</h4>\\n<p>\\n  The powers not delegated to the United States by the Constitution, nor prohibited by it to the States, are reserved to the States respectively, or to the people.\\n</p>\\n\");\n      \n    });\n  });//# sourceURL=ember-split-view-demo/templates/constitution.js");

;eval("define(\"ember-split-view-demo/templates/horizontal-composite\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"child horizontal\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options))));\n      data.buffer.push(\"\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-sash\'] || (depth0 && depth0[\'split-sash\']),options={hash:{\n        \'class\': (\"sash\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-sash\", options))));\n      data.buffer.push(\"\\n  \");\n      stack1 = (helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"compositeBottom\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'split-view\'] || (depth0 && depth0[\'split-view\']),options={hash:{\n        \'isVertical\': (false)\n      },hashTypes:{\'isVertical\': \"BOOLEAN\"},hashContexts:{\'isVertical\': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-view\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  \");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n      \");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"child horizontal\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options))));\n      data.buffer.push(\"\\n      \");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-sash\'] || (depth0 && depth0[\'split-sash\']),options={hash:{\n        \'class\': (\"sash\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-sash\", options))));\n      data.buffer.push(\"\\n      \");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"child horizontal\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options))));\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n\n      stack1 = (helper = helpers[\'split-view\'] || (depth0 && depth0[\'split-view\']),options={hash:{\n        \'isVertical\': (false),\n        \'class\': (\"splitViewHorizontal\")\n      },hashTypes:{\'isVertical\': \"BOOLEAN\",\'class\': \"STRING\"},hashContexts:{\'isVertical\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-view\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ember-split-view-demo/templates/horizontal-composite.js");

;eval("define(\"ember-split-view-demo/templates/horizontal\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"child horizontal\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options))));\n      data.buffer.push(\"\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-sash\'] || (depth0 && depth0[\'split-sash\']),options={hash:{\n        \'class\': (\"sash\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-sash\", options))));\n      data.buffer.push(\"\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"child horizontal\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options))));\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n\n      stack1 = (helper = helpers[\'split-view\'] || (depth0 && depth0[\'split-view\']),options={hash:{\n        \'isVertical\': (false),\n        \'class\': (\"splitViewHorizontal\")\n      },hashTypes:{\'isVertical\': \"BOOLEAN\",\'class\': \"STRING\"},hashContexts:{\'isVertical\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-view\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ember-split-view-demo/templates/horizontal.js");

;eval("define(\"ember-split-view-demo/templates/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n    \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"span\", {hash:{\n        \'viewName\': (\"leftOrTop\"),\n        \'class\': (\"top\")\n      },hashTypes:{\'viewName\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'viewName\': depth0,\'class\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"sash\", {hash:{\n        \'viewName\': (\"sash\"),\n        \'class\': (\"sash\")\n      },hashTypes:{\'viewName\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'viewName\': depth0,\'class\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"span\", {hash:{\n        \'viewName\': (\"rightOrBottom\"),\n        \'class\': (\"bottom\")\n      },hashTypes:{\'viewName\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'viewName\': depth0,\'class\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n\n      stack1 = helpers.view.call(depth0, \"split\", {hash:{\n        \'isVertical\': (false),\n        \'class\': (\"splitViewHorizontal\")\n      },hashTypes:{\'isVertical\': \"BOOLEAN\",\'class\': \"STRING\"},hashContexts:{\'isVertical\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ember-split-view-demo/templates/index.js");

;eval("define(\"ember-split-view-demo/templates/ring\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<pre>\\nThree Rings for the Elven-kings under the sky,\\nSeven for the Dwarf-lords in their halls of stone,\\nNine for Mortal Men doomed to die,\\nOne for the Dark Lord on his dark throne\\nIn the Land of Mordor where the Shadows lie.\\nOne Ring to rule them all, One Ring to find them,\\nOne Ring to bring them all and in the darkness bind them\\nIn the Land of Mordor where the Shadows lie.\\n</pre>\");\n      \n    });\n  });//# sourceURL=ember-split-view-demo/templates/ring.js");

;eval("define(\"ember-split-view-demo/templates/vertical-composite\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"child vertical\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options))));\n      data.buffer.push(\"\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-sash\'] || (depth0 && depth0[\'split-sash\']),options={hash:{\n        \'class\': (\"sash\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-sash\", options))));\n      data.buffer.push(\"\\n  \");\n      stack1 = (helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"compositeRight\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    \");\n      stack1 = (helper = helpers[\'split-view\'] || (depth0 && depth0[\'split-view\']),options={hash:{\n        \'isVertical\': (true)\n      },hashTypes:{\'isVertical\': \"BOOLEAN\"},hashContexts:{\'isVertical\': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-view\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  \");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n      \");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"child vertical\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options))));\n      data.buffer.push(\"\\n      \");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-sash\'] || (depth0 && depth0[\'split-sash\']),options={hash:{\n        \'class\': (\"sash\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-sash\", options))));\n      data.buffer.push(\"\\n      \");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"child vertical\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options))));\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n\n      stack1 = (helper = helpers[\'split-view\'] || (depth0 && depth0[\'split-view\']),options={hash:{\n        \'isVertical\': (true),\n        \'class\': (\"splitViewVertical\")\n      },hashTypes:{\'isVertical\': \"BOOLEAN\",\'class\': \"STRING\"},hashContexts:{\'isVertical\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-view\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ember-split-view-demo/templates/vertical-composite.js");

;eval("define(\"ember-split-view-demo/templates/vertical\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n  \");\n      stack1 = (helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"child vertical\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'split-sash\'] || (depth0 && depth0[\'split-sash\']),options={hash:{\n        \'class\': (\"sash\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-sash\", options))));\n      data.buffer.push(\"\\n  \");\n      stack1 = (helper = helpers[\'split-child\'] || (depth0 && depth0[\'split-child\']),options={hash:{\n        \'class\': (\"child vertical\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-child\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"ring\", options) : helperMissing.call(depth0, \"partial\", \"ring\", options))));\n      data.buffer.push(\"\\n  \");\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"yoda\", options) : helperMissing.call(depth0, \"partial\", \"yoda\", options))));\n      data.buffer.push(\"\\n  \");\n      return buffer;\n      }\n\n      stack1 = (helper = helpers[\'split-view\'] || (depth0 && depth0[\'split-view\']),options={hash:{\n        \'isVertical\': (true),\n        \'class\': (\"splitViewVertical\")\n      },hashTypes:{\'isVertical\': \"BOOLEAN\",\'class\': \"STRING\"},hashContexts:{\'isVertical\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"split-view\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      \n    });\n  });//# sourceURL=ember-split-view-demo/templates/vertical.js");

;eval("define(\"ember-split-view-demo/templates/yoda\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<h3>\\nFear is the path to the dark side. Fear leads to anger. Anger leads to hate. Hate leads to suffering.\\n</h3>\");\n      \n    });\n  });//# sourceURL=ember-split-view-demo/templates/yoda.js");

;eval("define(\"ember-split-view-demo/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-split-view-demo/tests/app.jshint.js");

;eval("define(\"ember-split-view-demo/tests/controllers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/application.js should pass jshint\', function() { \n      ok(true, \'controllers/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-split-view-demo/tests/controllers/application.jshint.js");

;eval("define(\"ember-split-view-demo/tests/ember-split-view-demo/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-split-view-demo/tests/helpers\');\n    test(\'ember-split-view-demo/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'ember-split-view-demo/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-split-view-demo/tests/ember-split-view-demo/tests/helpers/resolver.jshint.js");

;eval("define(\"ember-split-view-demo/tests/ember-split-view-demo/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-split-view-demo/tests/helpers\');\n    test(\'ember-split-view-demo/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'ember-split-view-demo/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-split-view-demo/tests/ember-split-view-demo/tests/helpers/start-app.jshint.js");

;eval("define(\"ember-split-view-demo/tests/ember-split-view-demo/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-split-view-demo/tests\');\n    test(\'ember-split-view-demo/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'ember-split-view-demo/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-split-view-demo/tests/ember-split-view-demo/tests/test-helper.jshint.js");

;eval("define(\"ember-split-view-demo/tests/helpers/resolver\", \n  [\"ember/resolver\",\"ember-split-view-demo/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=ember-split-view-demo/tests/helpers/resolver.js");

;eval("define(\"ember-split-view-demo/tests/helpers/start-app\", \n  [\"ember\",\"ember-split-view-demo/app\",\"ember-split-view-demo/router\",\"ember-split-view-demo/config/environments/test\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=ember-split-view-demo/tests/helpers/start-app.js");

;eval("define(\"ember-split-view-demo/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-split-view-demo/tests/router.jshint.js");

;eval("define(\"ember-split-view-demo/tests/routes/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/index.js should pass jshint\', function() { \n      ok(true, \'routes/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-split-view-demo/tests/routes/index.jshint.js");

;eval("define(\"ember-split-view-demo/tests/test-helper\", \n  [\"ember-split-view-demo/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    if (QUnit.urlParams.nocontainer) {\n      document.getElementById(\'ember-testing-container\').style.visibility = \'hidden\';\n    } else {\n      document.getElementById(\'ember-testing-container\').style.visibility = \'visible\';\n    }\n  });//# sourceURL=ember-split-view-demo/tests/test-helper.js");
